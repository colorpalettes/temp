# This is a basic workflow that is manually triggered

name: Manual workflow
run-name: manual workflow run-name @${{ github.actor }}

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
env:
  workflow_env_var: 3
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      # locale_mx:
      #   description: "The locales to run tests"
      #   # default: '["jp","cn"]'
      #   default: '"jp","cn"'
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      abc: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
           { \
            echo "## Shortened_name"; \
            echo "---"; \
            echo ":earth_americas: **Locale(s):** https://www.google.com"; \
            echo ":globe_with_meridians: **URL:** ``https://www.google.com``"; \
            echo ":whale2: Docker image: jinghui.hou@sas.com"; \
            echo ":palm_tree: Environment vars: ``jinghui.hou@sas.com``"; \
            echo ":email: Recipient(s): `jinghui.hou@sas.com,abc@sas.com`"; \
           }  >> "$GITHUB_STEP_SUMMARY"

        # echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT
  # job2:
  #   needs: job1
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: ${{ fromJSON(needs.job1.outputs.abc) }}
  #   steps:
  #     - run: echo "Matrix - Project ${{ matrix.project }}, Config ${{ matrix.config }}"
  # # This workflow contains a single job called "greet"
  # greet:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   env:
  #       job_env_var: true
  #   strategy:
  #     matrix:
  #       # locale_mx: ${{ fromJSON(github.event.inputs.locale_mx)}}
  #       locale_mx: ${{ fromJSON(format('[{0}]', inputs.locale_mx || '"fr","ko"')) }}
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   ### temp
  #   steps:
  #      - id: temp_step
  #        name: ALL FOR LOVE
  #        env:
  #           step_env_var: '{"status":"success"}'
  #        run: |
  #         the_secret=$((RANDOM))
  #         echo $((RANDOM))
  #         echo $the_secret
  #         echo "::add-mask::$the_secret"
  #         echo "secret-number=$the_secret" >> "$GITHUB_OUTPUT"
  #         #
  #         the_secret2=123456
  #         echo $the_secret2
  #      - name: Use that secret output (protected by a mask)
  #        run: |
  #         echo "the secret number is ${{ steps.sets-a-secret.outputs.secret-number }}"
          # echo "fromJSON: ${{ fromJSON(env.workflow_env_var)}}"
          # echo "fromJSON: ${{ fromJSON(env.job_env_var)}}"
          # echo "toJSON: ${{toJSON(env.step_env_var)}}"
          # echo "workflow_env_var: $workflow_env_var"
          # echo "job_env_var: $job_env_var"
          # echo "step_env_var: $step_env_var"
          #
          # echo "matrix.locale_mx: ${{ matrix.locale_mx }}"
          # echo "inputs.locale_mx: ${{inputs.locale_mx}}"  #output: jp,us
          # echo "github.event.inputs.locale_mx: ${{github.event.inputs.locale_mx}}" #output: jp,us
       # - name: next step
       #   run: echo $var2
       # - name: Check out the repository to the runner
       #   uses: actions/checkout@v4
       # - name: List the root folder of repo
       #   run: ls .
    ### temp
    # Runs a single command using the runners shell
    # - name: Send greeting
    #   run: echo "Hello ${{ inputs.name }}"
    # - env:
    #       EVENT_CONTEXT: ${{ toJSON(github.event) }}
    #   run: |
    #       echo EVENT_CONTEXT: $EVENT_CONTEXT
    #       echo ****************
    #       echo ${{ github.event }}
    # - name: Set color
    #   id: color-selector
    #   run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
    # - name: Get color
    #   env:
    #     SELECTED_COLOR: ${{ steps.color-selector.outputs.SELECTED_COLOR }}
    #   run: echo "The selected color is $SELECTED_COLOR"
    # - name: Set the value
    #   id: step_one
    #   run: |
    #     echo "action_state=yellow" >> "$GITHUB_ENV"
    # - name: Use the value
    #   id: step_two
    #   run: |
    #     printf '%s\n' "$action_state" # This will output 'yellow'
    #     echo ****************
    #     printenv
  #   - name: Example of adding a job summary
  #     run: echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY
  #   - run: |
  #       echo -e "Good! :+1:\nLaugh! :laugh:\nEyes! :eyes:" >> $GITHUB_STEP_SUMMARY
  #   - name: Generate list using Markdown
  #     run: |
  #       echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
  #       echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
  #       echo "- Lets add a bullet point" >> $GITHUB_STEP_SUMMARY
  #       echo "- Lets add a second bullet point" >> $GITHUB_STEP_SUMMARY
  #       echo "- How about a third one?" >> $GITHUB_STEP_SUMMARY
  #   - name: Overwrite Markdown
  #     run: |
  #       echo "Adding some Markdown content" >> $GITHUB_STEP_SUMMARY
  #       echo "There was an error, we need to clear the previous Markdown with some new content." > $GITHUB_STEP_SUMMARY
  # greet2:
  #   name: Job name is greet2 ":heart:"
  #   runs-on: ubuntu-latest
  #   steps:
  #    - name: ALL FOR LOVE ":heart:"
  #      run: |
  #       echo "LOVE!!! :heart: :heart: :heart:" >> $GITHUB_STEP_SUMMARY
  #       echo "### Hello world! :rocket:"
    # - id: up-step
    #   name: This step is used to create variables
    #   env: 
    #     UP_VAR01: 111
    #   run: |
    #     echo "UP_VAR02=222" >> $GITHUB_ENV
    #     echo "UP_VAR03=333" >> $GITHUB_OUTPUT
    #     echo "^^^^^^^^^^^^^^^^^^^^^^"
    #     env
    #     echo "************************"
    #     echo "UP_VAR01: $UP_VAR01"
    # - name: down-step
    #   env: 
    #     DOWN_VAR01: $UP_VAR01
    #     DOWN_VAR02: $UP_VAR02
    #     DOWN_VAR03: ${{steps.up-step.outputs.UP_VAR03}}
    #   run: |
    #     echo "^^^^^^^^^^^^^^^^^^^^^^"
    #     env
    #     echo "*************************"
    #     echo "UP_VAR01: $UP_VAR01"
    #     echo "UP_VAR02: $UP_VAR02"
    #     echo "UP_VAR03: ${{steps.up-step.outputs.UP_VAR03}}"
    #     echo "DOWN_VAR01: $DOWN_VAR01"
    #     echo "DOWN_VAR02: $DOWN_VAR02"
    #     echo "DOWN_VAR03: $DOWN_VAR03"
